import win32com.client
import os

def convert_word_to_pdf(docx_path, pdf_path):
    word = win32com.client.Dispatch("Word.Application")
    word.Visible = False

    doc = word.Documents.Open(docx_path)
    doc.ExportAsFixedFormat(pdf_path, ExportFormat=17)  # 17 = PDF
    doc.Close()
    word.Quit()

# 예시 실행
convert_word_to_pdf(r"C:\docs\test.docx", r"C:\docs\test.pdf")

def convert_excel_to_pdf(xlsx_path, pdf_path):
    excel = win32com.client.Dispatch("Excel.Application")
    excel.Visible = False

    workbook = excel.Workbooks.Open(xlsx_path)
    workbook.ExportAsFixedFormat(0, pdf_path)  # 0 = PDF
    workbook.Close(False)
    excel.Quit()

# 예시 실행
convert_excel_to_pdf(r"C:\docs\sample.xlsx", r"C:\docs\sample.pdf")


def convert_ppt_to_pdf(ppt_path, pdf_path):
    powerpoint = win32com.client.Dispatch("PowerPoint.Application")
    powerpoint.Visible = False

    presentation = powerpoint.Presentations.Open(ppt_path, WithWindow=False)
    presentation.SaveAs(pdf_path, 32)  # 32 = PDF
    presentation.Close()
    powerpoint.Quit()

# 예시 실행
convert_ppt_to_pdf(r"C:\docs\slide.pptx", r"C:\docs\slide.pdf")


def convert_office_to_pdf(input_path):
    ext = os.path.splitext(input_path)[1].lower()
    output_path = input_path.replace(ext, ".pdf")

    if ext in [".doc", ".docx"]:
        convert_word_to_pdf(input_path, output_path)
    elif ext in [".xls", ".xlsx"]:
        convert_excel_to_pdf(input_path, output_path)
    elif ext in [".ppt", ".pptx"]:
        convert_ppt_to_pdf(input_path, output_path)
    else:
        print(f"지원하지 않는 파일 확장자: {ext}")

# 예시 실행
convert_office_to_pdf(r"C:\docs\auto_test.docx")








import os
import win32com.client
from PIL import Image
from fpdf import FPDF

def convert_word_to_tiff(docx_path, tiff_path):
    word = win32com.client.Dispatch("Word.Application")
    word.Visible = False
    try:
        doc = word.Documents.Open(docx_path)
        doc.SaveAs(tiff_path, FileFormat=17)  # 17 = TIFF
        doc.Close()
    finally:
        word.Quit()

def tiff_to_pdf(tiff_path, pdf_path):
    image = Image.open(tiff_path)
    images = []
    try:
        while True:
            images.append(image.convert("RGB"))
            image.seek(image.tell() + 1)
    except EOFError:
        pass

    if images:
        images[0].save(pdf_path, save_all=True, append_images=images[1:])
    else:
        print("❌ TIFF에서 페이지를 추출하지 못했습니다.")

def convert(docx_path):
    if not os.path.exists(docx_path):
        print(f"❌ 파일을 찾을 수 없습니다: {docx_path}")
        return

    base, _ = os.path.splitext(docx_path)
    tiff_path = base + ".tiff"
    pdf_path = base + "_converted.pdf"

    print("📄 Word 문서 → TIFF 이미지 변환 중...")
    convert_word_to_tiff(docx_path, tiff_path)

    print("🖼 TIFF 이미지 → PDF 변환 중...")
    tiff_to_pdf(tiff_path, pdf_path)

    print(f"✅ 변환 완료: {pdf_path}")

if __name__ == "__main__":
    # 예시: sample.docx 가 같은 폴더에 있다고 가정
    target_file = os.path.join(os.getcwd(), "sample.docx")
    convert(target_file)


import os
import win32com.client
from PIL import Image

# 경로 하드코딩 (변경해서 사용)
WORD_PATH = r"D:\RPA_docs\sample.docx"
EXCEL_PATH = r"D:\RPA_docs\sample.xlsx"
PPT_PATH = r"D:\RPA_docs\sample.pptx"

# ---------- Word 처리 ----------
def convert_word_to_tiff(docx_path, tiff_path):
    word = win32com.client.Dispatch("Word.Application")
    word.Visible = False
    try:
        doc = word.Documents.Open(docx_path)
        doc.SaveAs(tiff_path, FileFormat=17)  # 17 = TIFF
        doc.Close()
    finally:
        word.Quit()

# ---------- Excel 처리 ----------
def convert_excel_to_tiff(xlsx_path, tiff_path):
    excel = win32com.client.Dispatch("Excel.Application")
    excel.Visible = False
    try:
        wb = excel.Workbooks.Open(xlsx_path)
        ws = wb.Worksheets(1)
        ws.PageSetup.Zoom = False
        ws.PageSetup.FitToPagesWide = 1
        ws.PageSetup.FitToPagesTall = False
        wb.ExportAsFixedFormat(1, tiff_path, Type=1, Quality=0, IncludeDocProperties=True,
                               IgnorePrintAreas=False, From=1, To=1, OpenAfterPublish=False)
        wb.Close(False)
    finally:
        excel.Quit()

# ---------- PowerPoint 처리 ----------
def convert_ppt_to_images(ppt_path, image_dir):
    ppt = win32com.client.Dispatch("PowerPoint.Application")
    ppt.Visible = False
    try:
        presentation = ppt.Presentations.Open(ppt_path, WithWindow=False)
        presentation.SaveAs(image_dir, 17)  # 17 = PNG
        presentation.Close()
    finally:
        ppt.Quit()

# ---------- TIFF or PNG → PDF ----------
def images_to_pdf(image_paths, output_pdf):
    images = []
    for path in image_paths:
        img = Image.open(path).convert("RGB")
        images.append(img)
    if images:
        images[0].save(output_pdf, save_all=True, append_images=images[1:])
        print(f"✅ PDF 저장 완료: {output_pdf}")
    else:
        print("❌ 이미지 → PDF 변환 실패")

# ---------- 경로 자동 생성 및 실행 ----------
def run_word_convert():
    base, _ = os.path.splitext(WORD_PATH)
    tiff_path = base + ".tiff"
    pdf_path = base + "_converted.pdf"
    convert_word_to_tiff(WORD_PATH, tiff_path)
    images_to_pdf([tiff_path], pdf_path)

def run_excel_convert():
    base, _ = os.path.splitext(EXCEL_PATH)
    pdf_path = base + "_converted.pdf"
    tiff_path = base + ".pdf"  # Excel은 TIFF로 저장이 어려워 PDF로 중간 저장됨
    convert_excel_to_tiff(EXCEL_PATH, tiff_path)
    print(f"✅ Excel PDF 출력 완료: {tiff_path}")
    # 필요 시 PDF → 이미지 변환 후 이미지 기반 PDF로 재생성 가능 (고급 기능)

def run_ppt_convert():
    base, _ = os.path.splitext(PPT_PATH)
    image_dir = base + "_slides"
    os.makedirs(image_dir, exist_ok=True)
    convert_ppt_to_images(PPT_PATH, image_dir)

    image_paths = sorted([
        os.path.join(image_dir, f) for f in os.listdir(image_dir)
        if f.endswith(".png")
    ])
    pdf_path = base + "_converted.pdf"
    images_to_pdf(image_paths, pdf_path)

# ---------- 메인 실행 ----------
if __name__ == "__main__":
    run_word_convert()
    run_excel_convert()
    run_ppt_convert()





import boto3

s3 = boto3.client('s3')

local_file_path = 'local/path/data.csv'
bucket_name = 'my-bucket'
s3_key = 'reports/2025/08/data.csv'  # S3 내 경로

try:
    s3.upload_file(local_file_path, bucket_name, s3_key)
    print(f"[✔] 업로드 완료: s3://{bucket_name}/{s3_key}")
except Exception as e:
    print(f"[✖] 업로드 실패: {e}")
